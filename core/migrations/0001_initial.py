# Generated by Django 5.0.2 on 2024-03-19 14:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SkinDiseaseImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='skin_disease_images/')),
            ],
        ),
        migrations.CreateModel(
            name='TensorflowResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accuracy', models.CharField(max_length=4)),
                ('skin_diseases', models.CharField(blank=True, choices=[('Acne', 'Acne'), ('Eczema (Dermatitis)', 'Eczema (Dermatitis)'), ('Psoriasis', 'Psoriasis'), ('Rosacea', 'Rosacea'), ('Dermatitis Herpetiformis', 'Dermatitis Herpetiformis'), ('Skin Cancer', 'Skin Cancer'), ('Hives (Urticaria)', 'Hives (Urticaria)'), ('Vitiligo', 'Vitiligo'), ('Fungal Infections', 'Fungal Infections'), ('Scabies', 'Scabies'), ('Atopic Dermatitis', 'Atopic Dermatitis'), ('Contact Dermatitis', 'Contact Dermatitis'), ('Seborrheic Dermatitis', 'Seborrheic Dermatitis'), ('Actinic Keratosis', 'Actinic Keratosis'), ('Basal Cell Carcinoma', 'Basal Cell Carcinoma'), ('Squamous Cell Carcinoma', 'Squamous Cell Carcinoma'), ('Melanoma', 'Melanoma'), ('Keratosis Pilaris', 'Keratosis Pilaris'), ('Lichen Planus', 'Lichen Planus'), ('Pityriasis Rosea', 'Pityriasis Rosea'), ('Tinea Versicolor', 'Tinea Versicolor'), ('Impetigo', 'Impetigo'), ('Cellulitis', 'Cellulitis'), ('Molluscum Contagiosum', 'Molluscum Contagiosum'), ('Warts', 'Warts'), ('Hidradenitis Suppurativa', 'Hidradenitis Suppurativa'), ('Ichthyosis', 'Ichthyosis'), ('Folliculitis', 'Folliculitis'), ('Perioral Dermatitis', 'Perioral Dermatitis'), ('Dyshidrotic Eczema', 'Dyshidrotic Eczema'), ('Granuloma Annulare', 'Granuloma Annulare'), ('Lupus', 'Lupus'), ('Scleroderma', 'Scleroderma'), ('Epidermolysis Bullosa', 'Epidermolysis Bullosa'), ('Prurigo Nodularis', 'Prurigo Nodularis'), ('Pemphigus', 'Pemphigus'), ('Pemphigoid', 'Pemphigoid'), ('Morbilliform Drug Eruption', 'Morbilliform Drug Eruption'), ('Stevens-Johnson Syndrome', 'Stevens-Johnson Syndrome'), ('Toxic Epidermal Necrolysis', 'Toxic Epidermal Necrolysis'), ('Erythema Multiforme', 'Erythema Multiforme'), ('Cutaneous T-cell Lymphoma', 'Cutaneous T-cell Lymphoma'), ('Kaposis Sarcoma', "Kaposi's Sarcoma"), ('Pyoderma Gangrenosum', 'Pyoderma Gangrenosum'), ('Eosinophilic Pustular Folliculitis', 'Eosinophilic Pustular Folliculitis'), ('Necrobiosis Lipoidica', 'Necrobiosis Lipoidica'), ("Sweet's Syndrome", "Sweet's Syndrome"), ('Lichen Sclerosus', 'Lichen Sclerosus'), ('Pruritus', 'Pruritus'), ('Xerosis', 'Xerosis'), ('Onychomycosis', 'Onychomycosis'), ('Pilonidal Cyst', 'Pilonidal Cyst'), ('Lipoma', 'Lipoma'), ('Sebaceous Cyst', 'Sebaceous Cyst'), ('Keloids', 'Keloids'), ('Angiomas', 'Angiomas'), ('Dermatofibroma', 'Dermatofibroma')], max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
